m2id=eye(2);
m2z=[1,0;0,-1];

m4id=zeros(2,2,2,2);
m4id(1,1,1,1)=1;
m4id(1,2,1,2)=1;
m4id(2,1,2,1)=1;
m4id(2,2,2,2)=1;

m4p=zeros(2,2,2,2);
m4p(1,1,1,1)=1;
m4p(1,2,2,1)=1;
m4p(2,1,1,2)=1;
m4p(2,2,2,2)=1;

m4p2 = permute(m4p,[1,4,3,2]);

lambda = 0.01;

p1 = 1/(1-lambda);
p2 = lambda/(lambda-1);

T1 = p1*m4p + p2*m4id;
T2 = p1*m4p2 + p2*m4id;

temperature = 1.0;
tising = zeros(2,2,2,2);
v_spin = [-1,1];
for i1 = 1:2
    for i2 = 1:2
        for i3 = 1:2
            for i4 = 1:2
                spin1 = v_spin(i1);
                spin2 = v_spin(i2);
                spin3 = v_spin(i3);
                spin4 = v_spin(i4);
                tising(i1,i2,i3,i4) = ...
                    exp(-(spin1*spin2 + spin2*spin3 ...
                    + spin3*spin4 + spin4*spin1)/temperature);
            end
        end
    end
end

B = 0.01;
op_z = [exp(B),0;0,exp(-B)];
T1 = ncon({T1,op_z},{[-1,1,-3,-4],[-2,1]});
T2 = ncon({T2,op_z},{[-1,1,-3,-4],[-2,1]});

tm = mcon({T1,T1,T2,T2},...
    {[-1,-2,1,4],[1,-3,-4,2],[3,2,-5,-6],[-8,4,3,-7]});


% T1 = rand(2,2,2,2);
% T2 = rand(3,5,3,2);


[A1,D1] = fn_svd_ad(T1,6);
[B1,C1] = fn_svd_bc(T1,6);
[A2,D2] = fn_svd_ad(T2,6);
[B2,C2] = fn_svd_bc(T2,6);

%%%%%%%%% check   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
t1ad = mcon({A1,D1},{[-1,-2,1],[-3,-4,1]});
t1bc = mcon({B1,C1},{[-2,-3,1],[-4,-1,1]});
t2ad = mcon({A2,D2},{[-1,-2,1],[-3,-4,1]});
t2bc = mcon({B2,C2},{[-2,-3,1],[-4,-1,1]});
tv = t1ad - T1;
tv = reshape(tv,[1,numel(tv)]);
disp(max(abs(tv)));
tv = t1bc - T1;
tv = reshape(tv,[1,numel(tv)]);
disp(max(abs(tv)));
tv = t2ad - T2;
tv = reshape(tv,[1,numel(tv)]);
disp(max(abs(tv)));
tv = t2bc - T2;
tv = reshape(tv,[1,numel(tv)]);
disp(max(abs(tv)));
%%%%%%%  end check  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

T1 = fn_comb_abcd(A1,B1,C2,D2);
T2 = fn_comb_abcd(A2,B2,C1,D1);

[A1,D1] = fn_svd_ad(T1,16);
[B2,C2] = fn_svd_bc(T2,16);

T = fn_comb_abcd(A1,B2,C2,D1);

Z = ncon({T},{[1,2,1,2]});
disp(['Z=',num2str(Z)]);


Num_truncate = 32;
Num_iteration = 20;
T_cell = cell(1,Num_iteration);
v_normfactor = ones(1,Num_iteration);

normfactor = sqrt(ncon({T,conj(T)},{[1,2,3,4],[1,2,3,4]}));
T = T./normfactor;

T_cell{1} = T;
v_normfactor(1) = normfactor;

Z = ncon({T},{[1,2,1,2]});
tv = v_normfactor(1:1);
tv_p = (1-1):-1:0;
tv_p = power(2,tv_p);
t_sum = sum(tv_p.*log(tv));
t_factor = exp(t_sum);
disp(['Z=',num2str(Z*t_factor)]);

for i=2:Num_iteration
    
    disp(['being iteration-',num2str(i)]);
    
    [A,D] = fn_svd_ad(T,Num_truncate);
    [B,C] = fn_svd_bc(T,Num_truncate);
    
    T = fn_comb_abcd(A,B,C,D);
    normfactor = sqrt(ncon({T,conj(T)},{[1,2,3,4],[1,2,3,4]}));
    disp(normfactor);
    T = T./normfactor;
    T_cell{i} = T;
    v_normfactor(i) = normfactor;
    
    Z = ncon({T},{[1,2,1,2]});
    tv = v_normfactor(1:i);
    tv_p = (i-1):-1:0;
    tv_p = power(2,tv_p);
    t_sum = sum(tv_p.*log(tv));
    t_factor = exp(t_sum);
    disp(['Z=',num2str(Z*t_factor)]);

end





%%%%%%%%%% END MAIN SCRIPTS %%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%  working functions %%%%%%%%%%%%%%%%%%

function res = fn_comb_abcd(A,B,C,D)

res = mcon({D,C,A,B},...
    {[1,4,-1],[2,1,-2],[3,2,-3],[4,3,-4]});

end



function [A,D] = fn_svd_ad(T,truncate)

v_size = size(T);
if length(v_size)<4
   v_size = [v_size,ones(1,4-length(v_size))]; 
end

t = reshape(T,v_size(1)*v_size(2),v_size(3)*v_size(4));
[u,s,v] = svd(t,'econ');
v_diag = diag(s);
tuncate_small = sum(v_diag>1e-12);
disp('the AD decomposition value: ');
disp(length(v_diag>1e-6));
disp(num2str(v_diag(1:min(20,length(v_diag)))'));
truncate = min(truncate,tuncate_small);
truncate = min(truncate,tuncate_small);
trun = min([truncate,v_size(1)*v_size(2),v_size(3)*v_size(4)]);
u = u(:,1:trun);
s = s(1:trun,1:trun);
v = v(:,1:trun);
u1 = u*sqrt(s);
v1 = sqrt(s)*v';

A = reshape(u1,[v_size(1),v_size(2),trun]);
D = reshape(v1,[trun,v_size(3),v_size(4)]);
D = permute(D,[2,3,1]);

end

function [B,C] = fn_svd_bc(T,truncate)

v_size = size(T);
if length(v_size)<4
   v_size = [v_size,ones(1,4-length(v_size))]; 
end

t = permute(T,[2,3,4,1]);
t = reshape(t,v_size(2)*v_size(3),v_size(4)*v_size(1));
[u,s,v] = svd(t,'econ');
v_diag = diag(s);
tuncate_small = sum(v_diag>1e-12);
disp('the BC decomposition value: ');
disp(length(v_diag>1e-6));
disp(num2str(v_diag(1:min(20,length(v_diag)))'));
truncate = min(truncate,tuncate_small);
trun = min([truncate,v_size(2)*v_size(3),v_size(4)*v_size(1)]);
u = u(:,1:trun);
s = s(1:trun,1:trun);
v = v(:,1:trun);
u1 = u*sqrt(s);
v1 = sqrt(s)*v';

B = reshape(u1,[v_size(2),v_size(3),trun]);
C = reshape(v1,[trun,v_size(4),v_size(1)]);
C = permute(C,[2,3,1]);

end


function res = mcon(cTensor,cIndex)

numTen = length(cIndex);
numIndex = 0;
numIndexOut = 0;
for i=1:numTen

    numIndex = numIndex + length(cIndex{i});
    numIndexOut = numIndexOut + sum(cIndex{i}<0); 
%     disp(numIndexOut);
%     disp(numIndex);
    
end

numIndexIn = (numIndex - numIndexOut)/2;

v_order(netcon(cIndex,0,2,1,1)) = 1:numIndexIn;
c_order = cell(1,numTen);
for i=1:numTen
    
   tv = cIndex{i};
   for j = 1:length(tv)
       if tv(j)>0
           tv(j) = v_order(tv(j));
       end
   end
   
   c_order{i} = tv;
   
end

res = ncon(cTensor,c_order);

end